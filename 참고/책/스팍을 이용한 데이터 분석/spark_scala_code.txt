val pets = sc.parallelize(
	List((¡°cat¡±, 1), (¡°dog¡±, 1), (¡°cat¡±, 2)))
pets.reduceByKey(_ + _)     // => {(cat, 3), (dog, 1)}
pets.groupByKey() 	    // => {(cat, Seq(1, 2)), (dog, Seq(1)}
pets.sortByKey() 	    // => {(cat, 1), (cat, 2), (dog, 1)}




val lines = sc.textFile("hdfs://master:9000/README.md")
val counts = lines.flatMap(line => line.split(" "))
	.map(word => (word, 1))
	.reduceByKey(_ + _)




val visits = sc.parallelize(List(
("index.html", "1.2.3.4"), 	   	("about.html", "3.4.5.6"),
("index.html", "1.3.3.1")))

val pageNames = sc.parallelize(List(
("index.html", "Home"), ("about.html", "About")))

visits.join(pageNames)
visits.cogroup(pageNames)

